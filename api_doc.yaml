openapi: 3.0.3
info:
  title: API SMA
  version: 1.0.0
  description: Documentación de la API SMA
paths:
  /api/add/:
    post:
      operationId: api_add_create
      description: endpoint para cargar indicadores a un PPDA
      summary: Add indicadores
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistroDinamico'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegistroDinamico'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegistroDinamico'
        required: true
      security:
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          description: Indicadores agregados correctamente
        '400':
          description: Error en la solicitud
  /api/all/:
    get:
      operationId: api_all_list
      description: Endpoint para ver Sabana completa de PPDA
      summary: Sabana de Datos
      tags:
      - api
      security:
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ppda'
          description: Sabana desplegada
        '400':
          description: Error en la solicitud
  /api/auth_test/:
    get:
      operationId: api_auth_test_retrieve
      description: Este endpoint responde a una solicitud GET con un mensaje de exito
        200 OK
      summary: endpoint - GET - PARA VALIDACION DE AUTH
      tags:
      - api
      security:
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: ''
    post:
      operationId: api_auth_test_create
      description: Este endpoint responde a una solicitud POST con un mensaje de exito
        201 Created
      summary: endpoint - POST - PARA VALIDACION DE AUTH
      tags:
      - api
      security:
      - basicAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/delete/:
    post:
      operationId: api_delete_create
      description: Endpoint para eliminar todos los registros asociados a una medida
        de un PPDA en una fecha específica
      summary: Eliminar registros de una medida en una fecha específica
      tags:
      - api
      security:
      - basicAuth: []
      - jwtAuth: []
      responses:
        '200':
          description: Registros eliminados correctamente
        '400':
          description: Error en la solicitud
        '404':
          description: No se encontró la medida o el PPDA
  /api/healthy/:
    get:
      operationId: api_healthy_retrieve
      description: Este endpoint responde a una solicitud GET con un mensaje de exito
        200 OK
      summary: Healthy endpoint - GET
      tags:
      - api
      security:
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: ''
    post:
      operationId: api_healthy_create
      description: Este endpoint responde a una solicitud POST con un mensaje de exito
        201 Created
      summary: Healthy endpoint - POST
      tags:
      - api
      security:
      - basicAuth: []
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: ''
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    Indicador:
      type: object
      properties:
        nombre:
          type: string
        valor:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
      required:
      - nombre
      - valor
    Ppda:
      type: object
      properties:
        nombre:
          type: string
          maxLength: 100
        fecha_creacion:
          type: string
          format: date-time
          readOnly: true
        medidas:
          type: string
          readOnly: true
      required:
      - fecha_creacion
      - medidas
      - nombre
    RegistroDinamico:
      type: object
      properties:
        ppda:
          type: string
        medida:
          type: string
        fecha:
          type: string
          format: date
        indicadores:
          type: array
          items:
            $ref: '#/components/schemas/Indicador'
      required:
      - fecha
      - indicadores
      - medida
      - ppda
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
